# make sure there are no spaces after the paths!!


#---- tomcat installation configuration  --------------------------------
# these will be written to tomcat/conf/server.xml at "ant install" 

# the port used by tomcat for http
http.port=8080

#the port used to restart tomcat
http.restart.port=8081

#where is tomcat?
catalina.home=../../util-java/tomcat-5

#where is the web application?
webapp.path=webapp

# --- end of tomcat installation configuration ----------------------------

#tomcat jvm, this can be set before every "ant tomcat"
tomcat.jvm.file.encoding=8859_1
tomcat.jvm.memory=70M
tomcat.jvm.initial_memory=20M
tomcat.jvm.hotspot=server
tomcat.makumba.long.content=24576
tomcat.manager.user=someuser
tomcat.manager.pass=somepass
tomcat.output=tomcat/logs/server-output.txt

#------------------ parade buildup -----------------------
# note: when you change this file, you have to reload parade from its 
# interface. if things screw up so much that you don't have any interface, 
# try using "cd parade", "ant reload"

# whenever an operation is invoked, a number of managers are called 
# in the indicated order.
# the managers that declare a method for that operation will have that
# method called, the others will not be involved. 

# the present way to invoke an operation is 
# Map Config.invokeOperation(String domain, String operationName, PageContext page)
# Where: 
# - domain is one of "parade" and "files", and denotes which managers to invoke (see parade.managers, files.managers)
# - page is pageContext
# - Map is the new Dictionary :), containing one Map per row. 
#   every row contains attributes set by varios Managers 
#   (e.g., on invocation of "setParade", FileManager sets
#   "path", CvsManager sets "cvs.user", "cvs.module", etc)

# the signature of the methods in managers can be:
# 1) void <operationName>(Map data, PageContext pc)
# in this case, the manager can add new rows in the data (like LocalRowStore does), and the method is invoked only once per Config.invokedOperation call
#
# 2) void <operationName>Simple(Map data, PageContext pc)
# in this case, the manager cannot add new rows in the data, and the method 
# is invoked for every row of data produced by other managers. 
# see CvsManager.setParadeSimple(), FileManager.setParadeSimple, etc

parade.authorizerClass=org.eu.best.BestMemberAuthorizer
parade.authorizationMessage=Parade, use password of your BEST private area account
parade.authorizationDB=localhost_mysql_karamba


# and now, the managers for Parade:
parade.managers=org.makumba.parade.LocalRowStore, org.makumba.parade.FileManager, org.makumba.parade.CvsManager, org.makumba.parade.ServletContextManager, org.makumba.parade.AntManager, org.makumba.parade.MakumbaManager


# the columns from index.jsp. for each column xxx, two files have to exist:
# xxxParadeHeading.jsp for displaying the table header
# xxxParadeRow.jsp for displaying the table row

parade.columns=name, path, obs, cvs, ant, servletContext, makumba


# the columns of the top add form in index.jsp. 
# for each column xxx, a file has to exist:
# xxxParadeAdd.jsp for displaying the controls in the form
# last column is empty!
parade.addColumns=name, path, , cvs, ant, servletContext,

# headers and footers for parade. rather than changing files.jsp, use these
parade.headers=logsHeader
parade.footers=
parade.reloadPage=reloadParade.jsp

# managers for directory, will be used later on
files.managers=org.makumba.parade.FileManager,  org.makumba.parade.TrackerManager, org.makumba.parade.CvsManager

# a file filter that ignores *~, *.class, CVS, tomcat*/work, tomcat*/logs
FileManager.filter= org.makumba.parade.SimpleFileFilter

# preliminary directory (or file groups) columns. for each column xxx
# xxxFileListHeading.jsp
# xxxFileListFile.jsp
# xxxFileListFolder.jsp
files.columns=icon, name, edit, date, size, cvs, tracker
# to be added:... cvs, tracker, codevel, compile
# column with general observations...

tracker.DB=devel.best.eu.org_mysql_karambasmall

# headers and footers for files.jsp . rather than changing index.jsp, use these
files.responseHeaders=makumba
files.headers=pathStrip
files.footersInForm=chooserFileFooter
#files.footers=newFileStrip, trackerNewStrip, uploadFileStrip, dateStrip
files.footers=dateStrip

ant.allowedOps= compile, clean, getTaglibs, getMakumba, getLocalMakumba, copyLocalMakumba, doc, applets
ant.allowedInstall=install

tree.managers=org.makumba.parade.FileManager,  org.makumba.parade.TrackerManager

access.managers=org.makumba.parade.LoggingManager

#for heading.jsp frame on top inludes non-directory-dependent tools:
heading.buttons=logStrip, logsHeader, icqStrip, sshStrip, chatStrip, ant_webappStrip, systemInfoStrip
#heading.buttons=logsHeader, icqStrip, sshStrip, chatStrip, ircStrip, ant_webappStrip, systemInfoStrip

# java compilation
build.compiler=jikes
build.compiler.emacs=true

# connection to the rest of the bundle
generics.cvs=commons.xml
generics.path=../${generics.cvs}
temp.dir=../../temp
common.libs=../../util-java/lib

# to download makumba and docs
makumba.site=http://download.makumba.org/makumba/download/


